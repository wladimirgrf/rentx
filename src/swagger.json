{
  "openapi": "3.0.0",
  "info": {
    "title": "Rentx Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "wladimir.code@gmail.com"
    }
  },
  "paths": {
    "/sessions": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Authentication user",
        "description": "Authentication user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/SessionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { 
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/definitions/SessionInput"
                        } 
                      }
                    },
                    { "$ref": "#/definitions/SessionOutput" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Refresh token",
        "description": "Route receives the refresh token and generates a new token with a new expiration time.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties": {
                  "token": {
                    "type":"string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJlbnR4LmNvbSIsImlhdCI6MTYzOTkzMjM5OSwiZXhwIjoxNjQyNTI0Mzk5LCJzdWIiOiI0YmQzNzUyOS00NWMwLTQ2M2QtODAyZi00OWQ5NTgwOTk3M2UifQ.ZrU1A5tYvn4VGBVON01uT1La614yLS4ChUkgXoFdQmw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SessionOutput"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "List all categories",
        "description": "List all categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {"$ref": "#/definitions/Id"},
                      {"$ref": "#/definitions/Category"},
                      {"$ref": "#/definitions/CreatedAt"}
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Upload categories",
        "description": "Upload categories from a file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": [
          "Specification"
        ],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Specification"
        ],
        "summary": "List all specifications",
        "description": "List all specifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {"$ref": "#/definitions/Id"},
                      {"$ref": "#/definitions/Specification"},
                      {"$ref": "#/definitions/CreatedAt"}
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Create a new car",
        "description": "Create a new car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/definitions/Id"},
                    {"$ref": "#/definitions/CarAvailable"},
                    {"$ref": "#/definitions/Car"},
                    {"$ref": "#/definitions/CreatedAt"}
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cars/specifications/{id}": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Include many specifications for a car",
        "description": "Include many specifications for a car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specifications_id": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "deb57fdc-4a1d-4e56-abcd-e2fffc09967c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/definitions/Id"},
                    {"$ref": "#/definitions/CarAvailable"},
                    {"$ref": "#/definitions/Car"},
                    {"$ref": "#/definitions/CreatedAt"},
                    { 
                      "type": "object",
                      "properties": {
                        "specifications": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {"$ref": "#/definitions/Id"},
                              {"$ref": "#/definitions/Specification"},
                              {"$ref": "#/definitions/CreatedAt"}
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cars/available": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "List all available cars",
        "description": "List all available cars",
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "Category id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {"$ref": "#/definitions/Id"},
                      {"$ref": "#/definitions/CarAvailable"},
                      {"$ref": "#/definitions/Car"},
                      {"$ref": "#/definitions/CreatedAt"}
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/images/{id}": {
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "Upload car images",
        "description": "Upload car images",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Upload user avatar",
        "description": "Upload user avatar from a file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User info",
        "description": "Get User info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/definitions/Id"},
                    {"$ref": "#/definitions/User"},
                    {
                      "type": "object",
                      "properties": {
                        "avatar": {
                          "type": "string",
                          "example": "489411fbd1ede15dd9e4aeaa63f5dd14-download.jpeg"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "avatar_url": {
                          "type": "string",
                          "example": "http://localhost:3333/users/avatar/489411fbd1ede15dd9e4aeaa63f5dd14-download.jpeg"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "category name"
        },
        "description": {
          "type": "string",
          "example": "Category description sample"
        }
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "specification name"
        },
        "description": {
          "type": "string",
          "example": "Specification description sample"
        }
      }
    },
    "SessionInput": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@rentx.com"
        },
        "password": {
          "type": "string",
          "example": "user password"
        }
      }
    },
    "SessionOutput": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJlbnR4LmNvbSIsImlhdCI6MTYzOTkzMjM5OSwiZXhwIjoxNjQyNTI0Mzk5LCJzdWIiOiI0YmQzNzUyOS00NWMwLTQ2M2QtODAyZi00OWQ5NTgwOTk3M2UifQ.ZrU1A5tYvn4VGBVON01uT1La614yLS4ChUkgXoFdQmw"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2Mzk5MzIzOTksImV4cCI6MTYzOTkzMjQxNCwic3ViIjoiNGJkMzc1MjktNDVjMC00NjNkLTgwMmYtNDlkOTU4MDk5NzNlIn0.VxIdVQlBWDf4-7rPKtH9-Jc0FAlmwNlf5_XT60hTIxw"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "user name"
        },
        "email": {
          "type": "string",
          "example": "user@rentx.com"
        },
        "password": {
          "type": "string",
          "example": "user password"
        },
        "driver_license": {
          "type": "string",
          "example": "74406838899"
        }
      }
    },
    "Id": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "da4d513b-c151-4c71-a322-00fd6f992583"
        }
      }
    },
    "CreatedAt": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "example": "2022-01-13T20:55:05.217Z"
        }
      }
    },
    "CarAvailable": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "car name"
        },
        "description": {
          "type": "string",
          "example": "car description"
        },
        "daily_rate": {
          "type": "number",
          "example": 10
        },
        "license_plate": {
          "type": "string",
          "example": "XXX-9999"
        },
        "fine_amount": {
          "type": "number",
          "example": 100
        },
        "brand": {
          "type": "string",
          "example": "brand"
        },
        "category_id": {
          "type": "string",
          "example": "984df6e8-646f-481a-98ae-ed97270e0821"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}